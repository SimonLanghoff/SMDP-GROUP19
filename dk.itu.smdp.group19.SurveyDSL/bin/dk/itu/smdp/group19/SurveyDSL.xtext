// automatically generated by Xtext
grammar dk.itu.smdp.group19.SurveyDSL with org.eclipse.xtext.common.Terminals

import "platform:/resource/dk.itu.smdp.group19.survey/model/Survey.ecore"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Survey returns Survey:
	'start survey' title=EString 
	'pages:' pages+=Page (pages+=Page)*
	'end survey';

Page returns Page:
	QuestionPage | DescriptionPage | ResultPage;

Question returns Question:
	FreetextQuestion | SingleChoiceQuestion | MultiChoiceQuestion;

Dependency returns Dependency:
	CheckOr
;

Answer returns Answer:
	ChoiceAnswer | FreetextAnswer;

EString returns ecore::EString:
	STRING | ID;

	//Page_Impl returns Page:
//	'Page'
//	'{'
//		'title' title=EString
//		('text' text=EString)?
//	'}';

QuestionPage returns QuestionPage:
	'question page' title=EString (':' text=EString)?
	'questions:' questions+=Question (questions+=Question)*
	'end page';

DescriptionPage returns DescriptionPage:
	'description page' title=EString 
	(':' text=EString)?
	'end page';

ResultPage returns ResultPage:
	'result page' title=EString 
	(':' text=EString)?
	'end page';

	//Question_Impl returns Question:
//	optional?='optional'
//	'Question'
//	'{'
//	'text' text=EString
//	('requires' requires=Dependency)?
//	'}';
EBoolean returns ecore::EBoolean:
	'true' | 'false';

FreetextQuestion returns FreetextQuestion:
	 (optional?='optional')?
	'free text question'  text=EString 
//	(optional?='optional')?
	('requires:' requires=Dependency)?
	'answers:' answers=FreetextAnswer
	'end question';

SingleChoiceQuestion returns SingleChoiceQuestion:
	(optional?='optional')? 'single choice question'
	 text=EString 
//	(optional?='optional')?
	('requires:' requires=Dependency)?
	'answers:' answers+=Answer (answers+=Answer)*
	'end question';

MultiChoiceQuestion returns MultiChoiceQuestion:
	 (optional?='optional')?
	'multi choice question' text=EString 
//	(optional?='optional')?
	('requires:' requires=Dependency)?
	'answers:' answers+=Answer (answers+=Answer)*
	'end question';

CheckOr returns Dependency:
	CheckAnd ({Or.lhs=current} 'or' rhs=CheckAnd)*
;

CheckAnd returns Dependency:
	CheckNot ({And.lhs=current} 'and' rhs=CheckNot)*
;

CheckNot returns Dependency:
	'not' Bottom ({Not.dependency=current}) | Bottom
;

Bottom returns Dependency:
	AnswerRef | '(' Dependency ')' 
;

AnswerRef returns AnswerRef:
	refers=[Answer|EString];

ChoiceAnswer returns ChoiceAnswer:
	'answer choice'
	name = ID ':'
	text = EString;


FreetextAnswer returns FreetextAnswer:
	'answer text'
	name = ID ':'
	text = EString;
